#!perl

# NO_PERINCI_CMDLINE_SCRIPT
# FRAGMENT id=shcompgen-hint command=_cpanm

# DATE
# VERSION

use strict;
use warnings;

use App::lcpan;
use Perinci::CmdLine::Util::Config;

my $res = Perinci::CmdLine::Util::Config::read_config(
    program_name => "lcpan",
);
die "Can't read lcpan config files: $res->[0] - $res->[1]\n"
    unless $res->[0] == 200;
my $config = $res->[2];

my %args;
$res = Perinci::CmdLine::Util::Config::get_args_from_config(
    config => $config,
    args   => \%args,
    subcommand_name => 'update-index',
    meta   => $App::lcpan::SPEC{update},
);
die "Can't set lcpan function argument from config: $res->[0] - $res->[1]\n"
    unless $res->[0] == 200;
App::lcpan::_set_args_default(\%args);

{
    local $ENV{PERL5OPT} = $ENV{LCPANM_PERL5OPT}
        if defined $ENV{LCPANM_PERL5OPT};

    my @cmd = ("cpanm");
    push @cmd, "--mirror", $args{cpan}, "--mirror-only" if $args{cpan}; # should be defined
    push @cmd, @ARGV;

    print "lcpanm: exec: ".join(" ", @cmd), "\n" if $ENV{DEBUG};
    exec @cmd;
}

# ABSTRACT: cpanm wrapper (set mirror to local CPAN by default)
# PODNAME:

=head1 SYNOPSIS

Use like you would use L<cpanm>:

 % lcpanm -n Some::Module ...
 % cpan-outdated --mirror file:$HOME/cpan | lcpanm -n


=head1 DESCRIPTION

C<lcpanm> is just a thin wrapper for L<cpanm>. It executes C<cpanm>, passing the
arguments it receives to C<cpanm>, but also adds C<--mirror $cpan> and
C<--mirror-only>, where I<$cpan> is path to the local CPAN mirror read from
F<lcpan.conf>.


=head1 ENVIRONMENT

=head2 LCPANM_PERL5OPT

If set, will set C<PERL5OPT> to this value when executing L<cpanm>.


=head1 SEE ALSO

L<cpanm>

L<App::lcpan> and L<lcpan>
